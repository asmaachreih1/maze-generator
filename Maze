#include <SFML/Graphics.hpp>
class Maze{
void draw(sf::RenderWindow &window) {
    sf::RectangleShape cell(sf::Vector2f(20, 20)); 
    for (int y = 0; y < height; ++y) {
        for (int x = 0; x < width; ++x) {
            if (grid[y][x] == '1') {
                cell.setFillColor(sf::Color::Black);
            } else if (grid[y][x] == '0' || grid[y][x] == '.') {
                cell.setFillColor(sf::Color::White);
            }
            if (grid[y][x] == 'S') {
                cell.setFillColor(sf::Color::Green);
            }
            if (grid[y][x] == 'E') {
                cell.setFillColor(sf::Color::Red);
            }
            cell.setPosition(x * 20, y * 20);
            window.draw(cell);
        }
    }
}
};
int main(){
    int w, h;
    std::cout << "Enter the width of the maze: ";
    std::cin >> w;
    std::cout << "Enter the height of the maze: ";
    std::cin >> h;
    Maze maze(w, h);
    auto path = maze.findPathAStar();

    sf::RenderWindow window(sf::VideoMode(w * 20, h * 20), "Maze Visualizer");
    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }
        window.clear();
        maze.printPath(path);  
        maze.draw(window);
        window.display();
    }
    return 0;
}
