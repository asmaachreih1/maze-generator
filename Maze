#include <vector> 
#include <iostream>

class Maze{
private:
 std::vector<<std::vector<char>> grid;
int width;
int height;

public:
 Maze(int w, int h):width(w), height(h){
grid.assign(height, std::vector<char>(width,'#'));
}

void setPass(int x, int y){
if(isValidCell(x,y)){
grid[y][x] = '';
}
}

void setObstacle(int x, int y){
if(isValidCell(x,y)){
grid[y][x] = '#';
}
}

bool isValidCell(int x, int y){
return x >= 0 && x < width &&  >= 0 && y < height;
}

void printMaze(){
for(int y = 0; y < height; ++y){
  for(int x = 0; x < width; ++x){
     std::cout <<grid[y][x];
}
std::cout<<std::endl;
}
}
};
int main(){
int w = 10;
int h = 5;

Maze uno(w, h);
uno.setPass(1,1);
uno.setPass(2,1);
uno.setPass(3,1);
uno.setPass(4,1);

uno.setObstacle(2,2);
uno.setObstacle(3,2);

uno.printMaze();

return 0;
}



